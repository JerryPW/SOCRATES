VaultWETH._claimCompoundDivs: GPTScan analysis start 
Prompt:
Given the following smart contract code, answer the questions below and organize the result in a json format like {"1": "Yes" or "No"}.
"1": Does it "have an external call"?

    function _claimCompoundDivs() private {
        updateAccount(msg.sender);
        uint exchangeRateCurrent = getExchangeRateCurrent();
        
        uint convertedBalance = cTokenBalance[msg.sender].mul(exchangeRateCurrent).div(10**18);
        uint depositedBalance = depositTokenBalance[msg.sender];
        
        uint amount = convertedBalance > depositedBalance ? convertedBalance.sub(depositedBalance) : 0;
        
        if (amount == 0) return;
        
        uint oldCTokenBalance = IERC20(TRUSTED_CTOKEN_ADDRESS).balanceOf(address(this));
        uint oldEtherBalance = address(this).balance;
        require(CEther(TRUSTED_CTOKEN_ADDRESS).redeemUnderlying(amount) == 0, "redeemUnderlying failed!");
        uint newCTokenBalance = IERC20(TRUSTED_CTOKEN_ADDRESS).balanceOf(address(this));
        uint newEtherBalance = address(this).balance;
        
        uint depositTokenReceived = newEtherBalance.sub(oldEtherBalance);
        uint cTokenRedeemed = oldCTokenBalance.sub(newCTokenBalance);
        
        IWETH(TRUSTED_DEPOSIT_TOKEN_ADDRESS).deposit{value: depositTokenReceived}();
        
        require(cTokenRedeemed <= cTokenBalance[msg.sender], "redeem exceeds balance!");
        cTokenBalance[msg.sender] = cTokenBalance[msg.sender].sub(cTokenRedeemed);
        totalCTokens = totalCTokens.sub(cTokenRedeemed);
        decreaseTokenBalance(TRUSTED_CTOKEN_ADDRESS, cTokenRedeemed);
        
        totalTokensWithdrawnByUser[msg.sender] = totalTokensWithdrawnByUser[msg.sender].add(depositTokenReceived);
        IERC20(TRUSTED_DEPOSIT_TOKEN_ADDRESS).safeTransfer(msg.sender, depositTokenReceived);
        
        totalEarnedCompoundDivs[msg.sender] = totalEarnedCompoundDivs[msg.sender].add(depositTokenReceived);
        
        emit CompoundRewardClaimed(msg.sender, depositTokenReceived);
    }
Response:
{"1": "Yes"}
--------------------------------------------------
Prompt:
Does the following smart contract code "have an external call and followed by any state changes"? Answer only "Yes" or "No".

    function _claimCompoundDivs() private {
        updateAccount(msg.sender);
        uint exchangeRateCurrent = getExchangeRateCurrent();
        
        uint convertedBalance = cTokenBalance[msg.sender].mul(exchangeRateCurrent).div(10**18);
        uint depositedBalance = depositTokenBalance[msg.sender];
        
        uint amount = convertedBalance > depositedBalance ? convertedBalance.sub(depositedBalance) : 0;
        
        if (amount == 0) return;
        
        uint oldCTokenBalance = IERC20(TRUSTED_CTOKEN_ADDRESS).balanceOf(address(this));
        uint oldEtherBalance = address(this).balance;
        require(CEther(TRUSTED_CTOKEN_ADDRESS).redeemUnderlying(amount) == 0, "redeemUnderlying failed!");
        uint newCTokenBalance = IERC20(TRUSTED_CTOKEN_ADDRESS).balanceOf(address(this));
        uint newEtherBalance = address(this).balance;
        
        uint depositTokenReceived = newEtherBalance.sub(oldEtherBalance);
        uint cTokenRedeemed = oldCTokenBalance.sub(newCTokenBalance);
        
        IWETH(TRUSTED_DEPOSIT_TOKEN_ADDRESS).deposit{value: depositTokenReceived}();
        
        require(cTokenRedeemed <= cTokenBalance[msg.sender], "redeem exceeds balance!");
        cTokenBalance[msg.sender] = cTokenBalance[msg.sender].sub(cTokenRedeemed);
        totalCTokens = totalCTokens.sub(cTokenRedeemed);
        decreaseTokenBalance(TRUSTED_CTOKEN_ADDRESS, cTokenRedeemed);
        
        totalTokensWithdrawnByUser[msg.sender] = totalTokensWithdrawnByUser[msg.sender].add(depositTokenReceived);
        IERC20(TRUSTED_DEPOSIT_TOKEN_ADDRESS).safeTransfer(msg.sender, depositTokenReceived);
        
        totalEarnedCompoundDivs[msg.sender] = totalEarnedCompoundDivs[msg.sender].add(depositTokenReceived);
        
        emit CompoundRewardClaimed(msg.sender, depositTokenReceived);
    }
    
Response:
No
--------------------------------------------------
