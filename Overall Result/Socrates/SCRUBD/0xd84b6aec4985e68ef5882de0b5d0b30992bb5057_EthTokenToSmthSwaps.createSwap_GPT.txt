
Start analyze function: EthTokenToSmthSwaps.createSwap(bytes20,address,uint256,address)
Function Security Analysis for EthTokenToSmthSwaps.createSwap(bytes20,address,uint256,address)
    There are no modifiers should be examined in function createSwap.
    Check direct function security
        - function EthTokenToSmthSwaps.createSwap(bytes20,address,uint256,address) has no security assurance protected by checking the authority of msg.sender
          Reason: The function createSwap does not contain any checks or assertions involving msg.sender being compared to any form of owner, leader, CEO, or similar
          roles. It only checks that _value is greater than 0 and that the balance for a particular swap is 0 before executing the token transfer and creating a swap.
        - function EthTokenToSmthSwaps.createSwap(bytes20,address,uint256,address) has no apparent security assurance by utilizing a lock machinism.
          Reason: The code does not contain a structure that matches any of the provided patterns. There are no require statements that change the state of a variable
          from True to False or vice versa, and no if(!xxx) throw structure.
External Call Analysis
    Direct external call: ['ERC20(_token).transferFrom(msg.sender,this,_value)']
    Analyze Transfer
    Analyze Gas
        - ERC20(_token).transferFrom(msg.sender,this,_value) ISN'T subjected to gas limits.
    Remaining external call: ['ERC20(_token).transferFrom(msg.sender,this,_value)']
    Analyze External Address
        The variable '_token' in external call 'ERC20(_token).transferFrom(msg.sender,this,_value)' has no state variable assigned. Therefore we check whether it has been
        hardcoded in the function.
            No The '_token' variable is being used as a parameter in the 'createSwap' function signature, which means it is supplied by the caller of the function rather
            than being hardcoded. There are no direct assignments or constant value declarations assigned to '_token' within the provided code, so it is dynamically
            provided each time the function is called.
Conclusion: This function will cause REE Problem.
