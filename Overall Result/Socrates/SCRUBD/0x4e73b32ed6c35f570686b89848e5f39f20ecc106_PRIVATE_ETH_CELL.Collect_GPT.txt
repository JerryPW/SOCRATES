
Start analyze function: PRIVATE_ETH_CELL.Collect(uint256)
Function Security Analysis for PRIVATE_ETH_CELL.Collect(uint256)
    There are no modifiers should be examined in function Collect.
    Check direct function security
        - function PRIVATE_ETH_CELL.Collect(uint256) has no security assurance protected by checking the authority of msg.sender
          Reason: The code doesn't contain any control structure checking if msg.sender is equal or not equal to owner-like variables such as xxxOwner, xxxAddress,
          Leader, or CEO.
        - function PRIVATE_ETH_CELL.Collect(uint256) has no apparent security assurance by utilizing a lock machinism.
          Reason: The code does not have any of the specified structures involving 'require' or 'if(!xxx) throw'. It checks conditions with 'if' but there is no explicit
          'throw', 'require', or variable flipping in the specified manner.
External Call Analysis
    Direct external call: ['msg.sender.call.value(_am)()']
    Analyze Transfer
    Analyze Gas
        - msg.sender.call.value(_am)() ISN'T subjected to gas limits.
    Remaining external call: ['msg.sender.call.value(_am)()']
    Analyze External Address
        External call msg.sender.call.value(_am)() calls msg.sender, which consider potential REE problem.
Conclusion: This function will cause REE Problem.
