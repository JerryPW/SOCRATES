
Start analyze function: Crowdsale.fallback()
Function Security Analysis for Crowdsale.fallback()
    There are no modifiers should be examined in function fallback.
    Check direct function security
        - function Crowdsale.fallback() has no security assurance protected by checking the authority of msg.sender
          Reason: The code contains an assignment to 'owner.transfer(actualETHTransfer);', which does not meet any of the specified conditions for evaluating
          'msg.sender'. It does not have a security check involving 'msg.sender' against an owner or specific address using require, if, or assert statements as described
          in the given conditions.
        - function Crowdsale.fallback() has no apparent security assurance by utilizing a lock machinism.
          Reason: The code does not contain any 'require(xxx == True)', 'require(xxx == False)', or 'require(!xxx)' conditional statement following by a flip of 'xxx'
          variable's boolean state as specified in the structures (1-4). The use of 'require(tokenToBuy > 0)' is a condition that ensures tokens to buy are greater than
          zero but does not follow up with changing the state of 'tokenToBuy' variable, as it doesn't involve any boolean flipping criteria outlined.
External Call Analysis
    Direct external call: ['msg.sender.transfer(msg.value-sendETH)', 'sharesTokenAddress.balanceOf(this)', 'msg.sender.transfer(msg.value-actualETHTransfer)',
    'owner.transfer(sendETH)', 'sharesTokenAddress.transfer(msg.sender,tokenToBuy)', 'sharesTokenAddress.transfer(msg.sender,tokenFree)',
    'msg.sender.transfer(msg.value)', 'owner.transfer(actualETHTransfer)']
    Analyze Transfer
        - msg.sender.transfer(msg.value-sendETH) is subjected to gas limits. Therefore, it has no potential REE problem. Here is the reason: The call
        'msg.sender.transfer(msg.value-sendETH)' contains the '.transfer(' keyword.. Parameter in 'transfer'/'send': 1.
        - msg.sender.transfer(msg.value-actualETHTransfer) is subjected to gas limits. Therefore, it has no potential REE problem. Here is the reason: The call
        'msg.sender.transfer(msg.value-actualETHTransfer)' contains the '.transfer(' keyword.. Parameter in 'transfer'/'send': 1.
        - owner.transfer(sendETH) is subjected to gas limits. Therefore, it has no potential REE problem. Here is the reason: The call 'owner.transfer(sendETH)' contains
        the '.transfer(' keyword.. Parameter in 'transfer'/'send': 1.
        - sharesTokenAddress.transfer(msg.sender,tokenToBuy) ISN'T subjected to gas limits. Parameter in 'transfer'/'send': 2.
        - sharesTokenAddress.transfer(msg.sender,tokenFree) ISN'T subjected to gas limits. Parameter in 'transfer'/'send': 2.
        - msg.sender.transfer(msg.value) is subjected to gas limits. Therefore, it has no potential REE problem. Here is the reason: The call
        'msg.sender.transfer(msg.value)' contains the '.transfer(' keyword.. Parameter in 'transfer'/'send': 1.
        - owner.transfer(actualETHTransfer) is subjected to gas limits. Therefore, it has no potential REE problem. Here is the reason: The call
        'owner.transfer(actualETHTransfer)' contains the '.transfer(' keyword.. Parameter in 'transfer'/'send': 1.
    Analyze Gas
        - sharesTokenAddress.balanceOf(this) ISN'T subjected to gas limits.
        - sharesTokenAddress.transfer(msg.sender,tokenToBuy) ISN'T subjected to gas limits.
        - sharesTokenAddress.transfer(msg.sender,tokenFree) ISN'T subjected to gas limits.
    Remaining external call: ['sharesTokenAddress.balanceOf(this)', 'sharesTokenAddress.transfer(msg.sender,tokenToBuy)',
    'sharesTokenAddress.transfer(msg.sender,tokenFree)']
    Analyze External Address
        There are ['sharesTokenAddress'] should be checked in variable sharesTokenAddress
        Checked variables: sharesTokenAddress
            Yes The function name 'Crowdsale' matches the contract name 'Crowdsale', which indicates that it is a constructor.
        There are ['sharesTokenAddress'] should be checked in variable sharesTokenAddress
        Checked variables: sharesTokenAddress
            Yes The function name 'Crowdsale' matches the contract name 'Crowdsale', indicating it is a constructor. Thus, the function satisfies the first
            characteristic.
        There are ['sharesTokenAddress'] should be checked in variable sharesTokenAddress
        Checked variables: sharesTokenAddress
            Yes The code provided is a constructor because the function name matches the contract name 'Crowdsale'.
Conclusion: This function will not cause REE Problem.
