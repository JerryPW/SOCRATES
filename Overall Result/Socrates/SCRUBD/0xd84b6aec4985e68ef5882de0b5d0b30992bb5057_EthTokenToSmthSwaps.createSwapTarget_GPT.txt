
Start analyze function: EthTokenToSmthSwaps.createSwapTarget(bytes20,address,address,uint256,address)
Function Security Analysis for EthTokenToSmthSwaps.createSwapTarget(bytes20,address,address,uint256,address)
    There are no modifiers should be examined in function createSwapTarget.
    Check direct function security
        - function EthTokenToSmthSwaps.createSwapTarget(bytes20,address,address,uint256,address) has no security assurance protected by checking the authority of
        msg.sender
          Reason: The function does not contain any of the specified checks for msg.sender against a variable named xxxOwner/xxxAddress/Leader/CEO, nor does it have any
          logic involving such comparisons or assertions.
        - function EthTokenToSmthSwaps.createSwapTarget(bytes20,address,address,uint256,address) has no apparent security assurance by utilizing a lock machinism.
          Reason: The provided code does not meet any of the specified conditions as there is no pattern of requiring a boolean condition on a variable followed by a
          change to that variable's value to either true or false as outlined.
External Call Analysis
    Direct external call: ['ERC20(_token).transferFrom(msg.sender,this,_value)']
    Analyze Transfer
    Analyze Gas
        - ERC20(_token).transferFrom(msg.sender,this,_value) ISN'T subjected to gas limits.
    Remaining external call: ['ERC20(_token).transferFrom(msg.sender,this,_value)']
    Analyze External Address
        The variable '_token' in external call 'ERC20(_token).transferFrom(msg.sender,this,_value)' has no state variable assigned. Therefore we check whether it has been
        hardcoded in the function.
            No The variable '_token' is used as a function parameter and not assigned any specific constant value within the function. Its value is determined by the
            input provided when the function is called, meaning it is not hardcoded.
Conclusion: This function will cause REE Problem.
