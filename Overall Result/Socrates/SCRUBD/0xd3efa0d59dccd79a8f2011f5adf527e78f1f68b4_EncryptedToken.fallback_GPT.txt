
Start analyze function: EncryptedToken.fallback()
Function Security Analysis for EncryptedToken.fallback()
    There are no modifiers should be examined in function fallback.
    Check direct function security
        - function EncryptedToken.fallback() has no security assurance protected by checking the authority of msg.sender
          Reason: The code does not include any require, if, or assert statements checking the msg.sender against any owner, address, Leader, or CEO variables.
        - function EncryptedToken.fallback() has no apparent security assurance by utilizing a lock machinism.
          Reason: The code does not contain any 'require' or 'if' statements that check a boolean variable (xxx) and then modify the same variable. It mainly handles
          sending value to the owner and transferring tokens based on some price calculation.
External Call Analysis
    Direct external call: ['owner.send(msg.value)']
    Analyze Transfer
        - owner.send(msg.value) is subjected to gas limits. Therefore, it has no potential REE problem. Here is the reason: The external call contains '.send(' keyword..
        Parameter in 'transfer'/'send': 1.
    Analyze Gas
    Remaining external call: []
    No more external call should be analyzed.
Conclusion: This function will not cause REE Problem.
