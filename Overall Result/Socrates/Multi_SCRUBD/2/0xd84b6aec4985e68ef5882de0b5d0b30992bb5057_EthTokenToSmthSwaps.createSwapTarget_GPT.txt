
Start analyze function: EthTokenToSmthSwaps.createSwapTarget(bytes20,address,address,uint256,address)
Function Security Analysis for EthTokenToSmthSwaps.createSwapTarget(bytes20,address,address,uint256,address)
    There are no modifiers should be examined in function createSwapTarget.
    Check direct function security
        - function EthTokenToSmthSwaps.createSwapTarget(bytes20,address,address,uint256,address) has no security assurance protected by checking the authority of
        msg.sender
          Reason: The function does not contain any of the specified structures that check or require msg.sender to be equal to or not equal to an owner-like address.
        - function EthTokenToSmthSwaps.createSwapTarget(bytes20,address,address,uint256,address) has no apparent security assurance by utilizing a lock machinism.
          Reason: The code does not contain any 'require' statements that involve checking a variable with the possibility of flipping a boolean state as described in the
          required structures.
External Call Analysis
    Direct external call: ['ERC20(_token).transferFrom(msg.sender,this,_value)']
    Analyze Transfer
    Analyze Gas
        - ERC20(_token).transferFrom(msg.sender,this,_value) ISN'T subjected to gas limits.
    Remaining external call: ['ERC20(_token).transferFrom(msg.sender,this,_value)']
    Analyze External Address
        The variable '_token' in external call 'ERC20(_token).transferFrom(msg.sender,this,_value)' has no state variable assigned in
        EthTokenToSmthSwaps.createSwapTarget(bytes20,address,address,uint256,address). Therefore we check whether it has been hardcoded in the function.
            No The variable '_token' is not hardcoded in the function. It is passed as a parameter to the function 'createSwapTarget', meaning its value is provided at
            runtime by the caller of the function.
Conclusion: This function will cause REE Problem.
