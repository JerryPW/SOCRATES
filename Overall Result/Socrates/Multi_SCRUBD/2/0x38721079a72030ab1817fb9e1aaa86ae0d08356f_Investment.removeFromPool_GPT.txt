
Start analyze function: Investment.removeFromPool(uint256,InvestmentLibrary.exitSwapParams[])
Function Security Analysis for Investment.removeFromPool(uint256,InvestmentLibrary.exitSwapParams[])
    There are no modifiers should be examined in function removeFromPool.
    Check direct function security
        - function Investment.removeFromPool(uint256,InvestmentLibrary.exitSwapParams[]) has no security assurance protected by checking the authority of msg.sender
          Reason: The code does not check conditions on the caller's address against a specific owner or privileged address.
        - function Investment.removeFromPool(uint256,InvestmentLibrary.exitSwapParams[]) has no apparent security assurance by utilizing a lock machinism.
          Reason: The code does not contain the specific structures mentioned in the criteria, such as requiring/set a boolean to False and changing it to True or vice
          versa, or conditional throwing based on a boolean state, followed by setting it.
External Call Analysis
    Direct external call: ['WETHContract.withdraw(amountToPayToUser)', 'msg.sender.call{value:amountToPayToUser}()',
    'IERC20(WETHAddress).transfer(owner(),poolOwnerFeeAmount)']
    Analyze Transfer
        - IERC20(WETHAddress).transfer(owner(),poolOwnerFeeAmount) ISN'T subjected to gas limits. Parameter in 'transfer'/'send': 2.
    Analyze Gas
        - WETHContract.withdraw(amountToPayToUser) ISN'T subjected to gas limits.
        - msg.sender.call{value:amountToPayToUser}() ISN'T subjected to gas limits.
        - IERC20(WETHAddress).transfer(owner(),poolOwnerFeeAmount) ISN'T subjected to gas limits.
    Remaining external call: ['WETHContract.withdraw(amountToPayToUser)', 'msg.sender.call{value:amountToPayToUser}()',
    'IERC20(WETHAddress).transfer(owner(),poolOwnerFeeAmount)']
    Analyze External Address
        There are ['WETHAddress'] should be checked in variable WETHContract
        Checked variables: WETHAddress
            State variable WETHAddress has initialized in public area after declaration.
        External call msg.sender.call{value:amountToPayToUser}() calls msg.sender, which consider potential REE problem.
Conclusion: This function will cause REE Problem.
