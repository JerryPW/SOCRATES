
Start analyze function: PiggY_BANK.Collect(uint256)
Function Security Analysis for PiggY_BANK.Collect(uint256)
    There are no modifiers should be examined in function Collect.
    Check direct function security
        - function PiggY_BANK.Collect(uint256) has no security assurance protected by checking the authority of msg.sender
          Reason: The code does not contain any of the specified structures related to msg.sender validation against owner, address, leader, or CEO roles. It checks
          balance conditions but doesn't restrict access based on msg.sender's role or identity.
        - function PiggY_BANK.Collect(uint256) has no apparent security assurance by utilizing a lock machinism.
          Reason: The code does not contain any require statement or throw statement, nor are there assignments changing a Boolean variable to True or False as per the
          specified structures.
External Call Analysis
    Direct external call: ['msg.sender.call.value(_am)()']
    Analyze Transfer
    Analyze Gas
        - msg.sender.call.value(_am)() ISN'T subjected to gas limits.
    Remaining external call: ['msg.sender.call.value(_am)()']
    Analyze External Address
        External call msg.sender.call.value(_am)() calls msg.sender, which consider potential REE problem.
Conclusion: This function will cause REE Problem.
