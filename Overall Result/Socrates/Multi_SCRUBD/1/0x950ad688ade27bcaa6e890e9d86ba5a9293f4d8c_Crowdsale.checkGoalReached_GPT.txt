
Start analyze function: Crowdsale.checkGoalReached()
Function Security Analysis for Crowdsale.checkGoalReached()
    The modifier of function checkGoalReached are ['afterDeadline']
    The result of checking modifiers:
        - modifier afterDeadline has no relation with controlled by owner.
          Reason: The modifier does not enforce ownership or specific address checking, nor does it implement a lock mechanism. It only checks for a time condition (after
          deadline).
    Check direct function security
        - function Crowdsale.checkGoalReached() has no security assurance protected by checking the authority of msg.sender
          Reason: The code does not contain any condition checking if msg.sender is equal to xxxOwner/xxxAddress/Leader/CEO or similar roles.
        - function Crowdsale.checkGoalReached() has no apparent security assurance by utilizing a lock machinism.
          Reason: The function does not include any 'require(xxx == True)', 'require(xxx == False)', 'require(!xxx)', or 'if(!xxx) throw' statements. These are necessary
          for it to match one of the four structures.
External Call Analysis
    Direct external call: ['tokenReward.transfer(beneficiary,(fundingGoal-amountRaised)/price)']
    Analyze Transfer
        - tokenReward.transfer(beneficiary,(fundingGoal-amountRaised)/price) ISN'T subjected to gas limits. Parameter in 'transfer'/'send': 2.
    Analyze Gas
        - tokenReward.transfer(beneficiary,(fundingGoal-amountRaised)/price) ISN'T subjected to gas limits.
    Remaining external call: ['tokenReward.transfer(beneficiary,(fundingGoal-amountRaised)/price)']
    Analyze External Address
        There are ['tokenReward'] should be checked in variable tokenReward
        Checked variables: tokenReward
            Yes The provided function is a constructor because its name matches the contract name 'Crowdsale'.
Conclusion: This function will not cause REE Problem.
