
Start analyze function: X_WALLET.Collect(uint256)
Function Security Analysis for X_WALLET.Collect(uint256)
    There are no modifiers should be examined in function Collect.
    Check direct function security
        - function X_WALLET.Collect(uint256) has no security assurance protected by checking the authority of msg.sender
          Reason: The function does not contain any checks comparing msg.sender to xxxOwner/xxxAddress/Leader/CEO using require, if, or assert statements.
        - function X_WALLET.Collect(uint256) has no apparent security assurance by utilizing a lock machinism.
          Reason: The code does not contain any usage of the 'require' function nor does it have any 'throw' statements in the specified structures. Therefore, none of
          the listed patterns apply.
External Call Analysis
    Direct external call: ['msg.sender.call.value(_am)()']
    Analyze Transfer
    Analyze Gas
        - msg.sender.call.value(_am)() ISN'T subjected to gas limits.
    Remaining external call: ['msg.sender.call.value(_am)()']
    Analyze External Address
        External call msg.sender.call.value(_am)() calls msg.sender, which consider potential REE problem.
Conclusion: This function will cause REE Problem.
